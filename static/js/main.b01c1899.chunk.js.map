{"version":3,"sources":["logo.svg","components/FirstCalculator.jsx","components/SecondCalculator.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["FirstCalculator","useState","pagamentoTotal","setPagamentoTotal","pagamentoPorHora","setPagamentoPorHora","horasTrabalhadasH","setHorasTrabalhadasH","horasTrabalhadasM","setHorasTrabalhadasM","horasTrabalhadasS","setHorasTrabalhadasS","fix","num","parseFloat","toFixed","safeHourDisplay","isNaN","useEffect","doCalculation","hourWithDecimals","hourDecimals","hoursOnly","minuteWithDecimals","minuteDecimals","minutesOnly","secondsWithDecimal","secondsDecimal","secondsOnly","type","value","onChange","e","target","SecondCalculator","parsedNum","_pagamentoPorHora","_horasTrabalhadasH","_horasTrabalhadasM","minutesToDecimal","App","className","src","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b01c1899.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {useState, useEffect} from 'react'\n\nconst FirstCalculator = () => {\n\tconst [pagamentoTotal, setPagamentoTotal] = useState('');\n\tconst [pagamentoPorHora, setPagamentoPorHora] = useState('');\n\tconst [horasTrabalhadasH, setHorasTrabalhadasH] = useState('');\n\tconst [horasTrabalhadasM, setHorasTrabalhadasM] = useState('');\n\tconst [horasTrabalhadasS, setHorasTrabalhadasS] = useState('');\n\n\tconst pagamentoTotalChangeHandler = (e) => {\n\t\tsetPagamentoTotal(e.target.value);\n\t\t\n\t};\n\t\n\tconst pagamentoPorHoraChangeHandler = (e) => {\n\t\tsetPagamentoPorHora(e.target.value);\n\t};\n\n /**\n  * num = 0.3600000000000003\n  */\n\tconst fix = (num) => {\n\t\t// .toFixed(2) converts to string <-- WARNING\n\t\treturn parseFloat((num).toFixed(10));\n\t};\n\n\tconst safeHourDisplay = (num) => {\n\t\tif(isNaN(num) || num == null || num == 0){\n\t\t\treturn '00';\n\t\t}\n\n\t\tif(num < 10){\n\t\t\treturn `0${num}`;\n\t\t}\n\n\t\treturn num;\n\t};\n\n\tuseEffect(() => {\n\t\tdoCalculation(pagamentoTotal, pagamentoPorHora);\n\t}, [pagamentoTotal, pagamentoPorHora]);\n\n\tconst doCalculation = (pagamentoTotal, pagamentoPorHora) => {\n\t\tlet result = pagamentoTotal / pagamentoPorHora; // TODO: use fix() ?\n\n\t\tlet hourWithDecimals = fix(result);\n\t\tlet hourDecimals = fix(hourWithDecimals % 1);\n\t\tlet hoursOnly = fix(hourWithDecimals - hourDecimals);\n\n\t\tlet minuteWithDecimals = hourDecimals * 60;\n\t\tlet minuteDecimals = fix(minuteWithDecimals % 1);\n\t\tlet minutesOnly = fix(minuteWithDecimals - minuteDecimals);\n\n\t\tlet secondsWithDecimal = minuteDecimals * 60;\n\t\tlet secondsDecimal = fix(secondsWithDecimal % 1);\n\t\tlet secondsOnly = fix(secondsWithDecimal - secondsDecimal);\n\n\t\tsetHorasTrabalhadasH(safeHourDisplay(hoursOnly));\n\t\tsetHorasTrabalhadasM(safeHourDisplay(minutesOnly));\n\t\tsetHorasTrabalhadasS(safeHourDisplay(secondsOnly));\n\t};\n\n\treturn(\n\t\t<>\n\t\t<p>Total payment</p>\n\t\t<input data-testid=\"total-payment\" type=\"number\" value={pagamentoTotal} onChange={pagamentoTotalChangeHandler} />\n\t\t<p>Payment/Hr</p>\n\t\t<input data-testid=\"payment-hr\" type=\"number\" value={pagamentoPorHora} onChange={pagamentoPorHoraChangeHandler} />\n\t\t<p>Hours worked:</p>\n\t\t<p data-testid=\"hours-worked\">{`${horasTrabalhadasH}:${horasTrabalhadasM}:${horasTrabalhadasS}`} Hrs</p>\n\t\t</>\n\t);\n};\n\nexport default FirstCalculator;","import React, {useState, useEffect} from 'react'\n\nconst SecondCalculator = () => {\n  const [pagamentoPorHora, setPagamentoPorHora] = useState('');\n  const [horasTrabalhadasH, setHorasTrabalhadasH] = useState('');\n  const [horasTrabalhadasM, setHorasTrabalhadasM] = useState('');\n  const [pagamentoTotal, setPagamentoTotal] = useState(0);\n\n  const pagamentoPorHoraChangeHandler = (e) => {\n    setPagamentoPorHora(e.target.value);\n  };\n\n  const horasTrabalhadasHChangeHandler = (e) => {\n    setHorasTrabalhadasH(e.target.value);\n  };\n\n  const horasTrabalhadasMChangeHandler = (e) => {\n    setHorasTrabalhadasM(e.target.value);\n  };\n\n  /**\n     * num = 0.3600000000000003\n     */\n  const fix = (num) => {\n    let parsedNum = parseFloat(num);\n    if(isNaN(parsedNum)){\n      return 0;\n    }\n\n    // .toFixed(2) converts to string <-- WARNING\n    return parseFloat(parsedNum.toFixed(10));\n  };\n\n  const safeResultDisplay = (num) => {\n    if(isNaN(num)){\n      return 0;\n    }\n\n    // .toFixed(2) converts to string <-- WARNING\n    return parseFloat(num.toFixed(2));\n  };\n\n  useEffect(() => {\n    let _pagamentoPorHora = fix(pagamentoPorHora);\n    let _horasTrabalhadasH = fix(horasTrabalhadasH);\n    let _horasTrabalhadasM = fix(horasTrabalhadasM);\n\n    if(_pagamentoPorHora == 0 && \n       _pagamentoPorHora == 0 && \n       _pagamentoPorHora == 0){\n      setPagamentoTotal(0);\n      return;\n    }\n    \n    let minutesToDecimal = fix(_horasTrabalhadasM / 60);\n    let hoursToDecimal = _horasTrabalhadasH + minutesToDecimal;\n    let result = _pagamentoPorHora * (_horasTrabalhadasH + minutesToDecimal);\n\n    setPagamentoTotal(safeResultDisplay(result));\n  }, [pagamentoPorHora, horasTrabalhadasH, horasTrabalhadasM]);\n\n  return(\n    <>\n      <p>Payment/Hr</p>\n      <input data-testid=\"2-payment-hr\" type=\"number\" value={pagamentoPorHora} onChange={pagamentoPorHoraChangeHandler}/>\n\n      <p>Hours worked</p>\n      <input data-testid=\"2-hours-worked-h\" type=\"number\" value={horasTrabalhadasH} onChange={horasTrabalhadasHChangeHandler} />\n      <input data-testid=\"2-hours-worked-m\" type=\"number\" value={horasTrabalhadasM} onChange={horasTrabalhadasMChangeHandler} />\n\n      <p>Total payment:</p>\n      <p data-testid=\"2-total-payment\">${pagamentoTotal}</p>\n    </>);\n};\n\nexport default SecondCalculator;","import logo from \"./logo.svg\";\nimport \"./App.css\";\n\nimport FirstCalculator from \"./components/FirstCalculator\";\nimport SecondCalculator from \"./components/SecondCalculator\";\n\nimport \"./styles/styles.css\";\n\nfunction App() {\n  return (\n    <>\n      <div className=\"app-container\">\n        <img src=\"/inside-out-cleaning-calculator-2/inside-out-logo.jpeg\" />\n        <FirstCalculator />\n      </div>\n      <br />\n      <div className=\"app-container\">\n        <SecondCalculator />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}